apiVersion: apps/v1
kind: Deployment
metadata:
  name: personalization-engine
  labels:
    app: personalization-engine
    component: ai-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: personalization-engine
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: personalization-engine
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: personalization-engine
        image: ${REGISTRY}/chimera/personalization-engine:latest
        imagePullPolicy: Always
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
            nvidia.com/gpu: "1"
          requests:
            cpu: "500m"
            memory: "1Gi"
        ports:
        - containerPort: 8002
          name: http
        env:
        - name: PORT
          value: "8002"
        - name: LOG_LEVEL
          value: "INFO"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: url
        - name: NATS_URL
          valueFrom:
            configMapKeyRef:
              name: nats-config
              key: url
        - name: NATS_USER
          valueFrom:
            secretKeyRef:
              name: nats-credentials
              key: user
              optional: true
        - name: NATS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nats-credentials
              key: password
              optional: true
        - name: EMBEDDING_MODEL
          value: "sentence-transformers/all-MiniLM-L6-v2"
        - name: EMBEDDING_DIMENSION
          value: "384"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 5
        volumeMounts:
        - name: model-cache
          mountPath: /app/.cache
      volumes:
      - name: model-cache
        emptyDir:
          medium: Memory
          sizeLimit: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: personalization-engine
  labels:
    app: personalization-engine
spec:
  ports:
  - port: 8002
    targetPort: 8002
    protocol: TCP
    name: http
  selector:
    app: personalization-engine
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: personalization-engine-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: personalization.chimera.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: personalization-engine
            port:
              number: 8002
