apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gpu-monitoring-agent
  namespace: monitoring
  labels:
    app: gpu-monitoring-agent
    component: chimera
spec:
  selector:
    matchLabels:
      app: gpu-monitoring-agent
  template:
    metadata:
      labels:
        app: gpu-monitoring-agent
        component: chimera
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      priorityClassName: system-node-critical
      containers:
      - name: gpu-monitor
        image: ${REGISTRY}/chimera/gpu-monitoring-agent:latest
        imagePullPolicy: Always
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MONITORING_INTERVAL_SECONDS
          value: "15"
        ports:
        - containerPort: 8000
          name: metrics
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
        volumeMounts:
        - name: gpu-fs
          mountPath: /usr/local/nvidia
      volumes:
      - name: gpu-fs
        hostPath:
          path: /usr/local/nvidia
      nodeSelector:
        nvidia.com/gpu.present: "true"
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
---
apiVersion: v1
kind: Service
metadata:
  name: gpu-monitoring-service
  namespace: monitoring
  labels:
    app: gpu-monitoring-agent
    component: chimera
spec:
  selector:
    app: gpu-monitoring-agent
  ports:
  - name: metrics
    port: 8000
    targetPort: 8000
  type: ClusterIP
