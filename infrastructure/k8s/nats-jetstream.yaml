apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nats
  labels:
    app: nats
spec:
  serviceName: nats
  replicas: 3
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nats
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: nats
        image: nats:2.10-alpine
        args:
        - "-js"
        - "-c"
        - "/etc/nats/nats-server.conf"
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        - containerPort: 7777
          name: metrics
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nats
        - name: jetstream-storage
          mountPath: /data
        - name: tls-volume
          mountPath: /etc/nats/certs
          readOnly: true
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: config-volume
        configMap:
          name: nats-config
      - name: tls-volume
        secret:
          secretName: nats-server-tls
          defaultMode: 0400
      - name: jetstream-storage
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
data:
  nats-server.conf: |
    # Basic server configuration
    port: 4222
    http: 8222
    server_name: nats-server

    # Cluster port on all interfaces
    cluster {
      name: nats-cluster
      port: 6222
      routes: [
        nats://nats-0.nats:6222
        nats://nats-1.nats:6222
        nats://nats-2.nats:6222
      ]
      # Static cluster_advertise that will be determined at runtime by routing system
      # cluster_advertise is commented out as the server can autodetect in k8s
      connect_retries: 30
      
      # TLS configuration for cluster routes (REQUIRED for compliance)
      tls {
        cert_file: "/etc/nats/certs/server.crt"
        key_file:  "/etc/nats/certs/server.key"
        ca_file:   "/etc/nats/certs/ca.crt"
        timeout:   5
      }
    }

    # JetStream configuration
    jetstream {
      store_dir: /data
      max_memory_store: 1G
      max_file_store: 8G
      domain: chimera
    }

    # Logging options
    debug: false
    trace: false
    logtime: true

    # TLS config for client connections (REQUIRED for compliance)
    tls {
      cert_file: "/etc/nats/certs/server.crt"
      key_file:  "/etc/nats/certs/server.key"
      ca_file:   "/etc/nats/certs/ca.crt"
      verify:    true
      timeout:   5
    }

    # Authorization for client connections
    authorization {
      # Default permissions
      permissions {
        publish: ["chimera.>", "_INBOX.>"]
        subscribe: ["chimera.>", "_INBOX.>"]
      }
      timeout: 2
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nats
  labels:
    app: nats
spec:
  selector:
    app: nats
  clusterIP: None
  ports:
  - name: client
    port: 4222
  - name: cluster
    port: 6222
  - name: monitor
    port: 8222
---
apiVersion: v1
kind: Service
metadata:
  name: nats-client
  labels:
    app: nats
spec:
  selector:
    app: nats
  ports:
  - name: client
    port: 4222
    targetPort: 4222
  - name: monitor
    port: 8222
    targetPort: 8222
